{"version":3,"sources":["Todo/Todo.js","task.png","Todo/App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","task","list","taskEnd","status","handleChange","bind","handleSubmit","handleRemove","filterItem","displayList","event","this","setState","target","value","preventDefault","tasks","id","Date","now","push","console","log","el","updateTask","map","e","filter","checked","className","onClick","taskList","onSubmit","htmlFor","type","name","placeholder","onChange","required","length","Component","App","src","alt","height","style","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RA6HeA,E,kDAzHX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,OAAQ,OAEZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,YAAc,EAAKA,YAAYJ,KAAjB,gBAZJ,E,gDAcnB,SAAaK,GACTC,KAAKC,SAAS,CACVZ,KAAMU,EAAMG,OAAOC,U,0BAG3B,SAAaJ,GACTA,EAAMK,iBAEN,IAAMd,EAAI,YAAOU,KAAKZ,MAAME,MACtBe,EAAQ,CACVC,GAAIC,KAAKC,MACTnB,KAAMW,KAAKZ,MAAMC,KACjBG,OAAQ,WAEZF,EAAKmB,KAAKJ,GACVL,KAAKC,SAAS,CACVX,OACAD,KAAM,KAEVqB,QAAQC,IAAIN,K,0BAEhB,SAAaO,GACT,IACIC,EADI,YAAOb,KAAKZ,MAAME,MACJwB,KAAI,SAAAC,GAAC,OAAIA,EAAET,KAAOM,EAAGN,GAAZ,2BAAsBS,GAAtB,IAAyBvB,OAAQ,cAAgBuB,KAC5ExB,EAAO,YAAOS,KAAKZ,MAAMG,SAC7BA,EAAO,sBAAOA,GAAP,4BAAqBqB,GAArB,IAAyBpB,OAAQ,gBACxCqB,EAAaA,EAAWG,QAAO,SAAAD,GAAC,OAAIA,EAAET,KAAOM,EAAGN,MAChDN,KAAKC,SAAS,CACVX,KAAMuB,EACNtB,YAEJmB,QAAQC,IAAIC,GACZF,QAAQC,IAAIpB,K,wBAEhB,SAAWwB,GACHA,EAAEb,OAAOe,UACTjB,KAAKC,SAAS,CACVT,OAAQuB,EAAEb,OAAOC,QAErBO,QAAQC,IAAIX,KAAKZ,MAAMI,W,yBAG/B,WAAe,IAAD,OACJA,EAASQ,KAAKZ,MAAMI,OACpBD,EAAUS,KAAKZ,MAAMG,QAAQuB,KAAI,SAAAF,GAAE,OACrC,sBAAKM,UAAU,WAAf,UACKN,EAAGvB,KACJ,wBAAQ6B,UAAU,QAAQC,QAAS,kBAAM,EAAKvB,aAAagB,IAA3D,mBAF2BA,EAAGN,OAKhCc,EAAWpB,KAAKZ,MAAME,KAAKwB,KAAI,SAACF,GAAD,OACjC,sBAAKM,UAAU,WAAf,UACKN,EAAGvB,KACJ,wBAAQ6B,UAAU,QAAQC,QAAS,kBAAM,EAAKvB,aAAagB,IAA3D,mBAF2BA,EAAGN,OAKtC,OACI,8BAEmB,cAAXd,EAAyBD,EAAU6B,M,oBAKnD,SAAOjC,GAAQ,IAAD,OACV,OACI,gCACI,sBAAK+B,UAAU,WAAf,UAEI,uBAAMG,SAAU,SAAAN,GAAC,OAAI,EAAKpB,aAAaoB,IAAvC,UACI,uBAAOO,QAAQ,OAAf,sBACA,uBAAOC,KAAK,OAAOpB,MAAOH,KAAKZ,MAAMC,KAAMmC,KAAK,OAAOC,YAAY,qBAAqBC,SAAU,SAAAX,GAAC,OAAI,EAAKtB,aAAasB,IAAIY,UAAQ,IACrI,wBAAQxB,MAAM,SAASe,UAAU,SAAjC,yBAGJ,gCAEI,uBAAOK,KAAK,WAAWpB,MAAM,MAAMqB,KAAK,OAAON,UAAU,WAAWQ,SAAU,SAAC3B,GAAD,OAAW,EAAKF,WAAWE,MACzG,uBAAOuB,QAAQ,aAAf,uBAEA,uBAAOC,KAAK,WAAWpB,MAAM,YAAYqB,KAAK,OAAON,UAAU,WAAWQ,SAAU,SAAC3B,GAAD,OAAW,EAAKF,WAAWE,MAC/G,uBAAOuB,QAAQ,aAAf,uBAEA,uBAAOC,KAAK,WAAWpB,MAAM,UAAUqB,KAAK,OAAON,UAAU,WAAWQ,SAAU,SAAC3B,GAAD,OAAW,EAAKF,WAAWE,MAC7G,uBAAOuB,QAAQ,gBAAf,gCAKkB,cAAtBtB,KAAKZ,MAAMI,OACPQ,KAAKZ,MAAMG,QAAQqC,OAAS,EAAI,qDAAwB5B,KAAKZ,MAAME,KAAKsC,OAAxC,YAA6D,qDAC3F5B,KAAKZ,MAAME,KAAKsC,OAAS,EAAI,2CAAc5B,KAAKZ,MAAME,KAAKsC,OAA9B,kBAAyD,sDAIhG,qBAAKV,UAAU,WAAf,SAEQlB,KAAKF,uB,GAhHV+B,aCHJ,G,MAAA,IAA0B,kC,MCkB1BC,MAdf,SAAa3C,GACT,OACI,sBAAK+B,UAAU,MAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKa,IAAK1C,EAAM2C,IAAK3C,EAAM4C,OAAO,QAAQf,UAAU,aACpD,oBAAIgB,MAAO,CAAEC,MAAO,SAApB,0CAGJ,kDACA,cAAC,EAAD,QCDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f21f7278.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: '',\r\n            list: [],\r\n            taskEnd: [],\r\n            status: \"all\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.filterItem = this.filterItem.bind(this);\r\n        this.displayList = this.displayList.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            task: event.target.value\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        // * To Display Task As List *\r\n        const list = [...this.state.list];\r\n        const tasks = {\r\n            id: Date.now(),\r\n            task: this.state.task,\r\n            status: \"running\"\r\n        }\r\n        list.push(tasks);\r\n        this.setState({\r\n            list,\r\n            task: ''\r\n        })\r\n        console.log(tasks);\r\n    }\r\n    handleRemove(el) {\r\n        let task = [...this.state.list];\r\n        let updateTask = task.map(e => e.id === el.id ? { ...e, status: \"completed\" } : e);\r\n        let taskEnd = [...this.state.taskEnd];\r\n        taskEnd = [...taskEnd, { ...el, status: \"completed\" }];\r\n        updateTask = updateTask.filter(e => e.id !== el.id)\r\n        this.setState({\r\n            list: updateTask,\r\n            taskEnd\r\n        })\r\n        console.log(el);\r\n        console.log(taskEnd);\r\n    }\r\n    filterItem(e) {\r\n        if (e.target.checked) {\r\n            this.setState({\r\n                status: e.target.value\r\n            })\r\n            console.log(this.state.status);\r\n        }\r\n    }\r\n    displayList() {\r\n        const status = this.state.status;\r\n        const taskEnd = this.state.taskEnd.map(el => (\r\n            <div className=\"TaskList\" key={el.id}>\r\n                {el.task}\r\n                <button className=\"Clear\" onClick={() => this.handleRemove(el)}> X </button>\r\n            </div>\r\n        ))\r\n        const taskList = this.state.list.map((el) => (\r\n            <div className=\"TaskList\" key={el.id}>\r\n                {el.task}\r\n                <button className=\"Clear\" onClick={() => this.handleRemove(el)}> X </button>\r\n            </div>\r\n        ))\r\n        return (\r\n            <div>\r\n                {\r\n                    status === \"completed\" ? taskEnd : taskList\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n    render(props) {\r\n        return (\r\n            <div>\r\n                <div className=\"ToDoForm\">\r\n                    {/* To Get User Input  */}\r\n                    <form onSubmit={e => this.handleSubmit(e)}>\r\n                        <label htmlFor=\"task\"> Task : </label>\r\n                        <input type=\"text\" value={this.state.task} name=\"task\" placeholder=\"Enter a Task to Do\" onChange={e => this.handleChange(e)} required />\r\n                        <button value=\"submit\" className=\"Submit\"> Submit </button>\r\n                    </form>\r\n                    {/* Switch Over Various Actions Input */}\r\n                    <div>\r\n\r\n                        <input type=\"checkbox\" value=\"all\" name=\"task\" className=\"Checkbox\" onChange={(event) => this.filterItem(event)} />\r\n                        <label htmlFor=\"All Tasks \" >All Tasks</label>\r\n\r\n                        <input type=\"checkbox\" value=\"completed\" name=\"task\" className=\"Checkbox\" onChange={(event) => this.filterItem(event)} />\r\n                        <label htmlFor=\"Completed \" >Completed</label>\r\n\r\n                        <input type=\"checkbox\" value=\"running\" name=\"task\" className=\"Checkbox\" onChange={(event) => this.filterItem(event)} />\r\n                        <label htmlFor=\"Running Task \" >Running Task</label>\r\n\r\n                    </div>\r\n                </div>\r\n                {\r\n                    this.state.status === \"completed\" ?\r\n                        this.state.taskEnd.length > 0 ? <h1>You have completed {this.state.list.length} tasks</h1> : <h1>Complete Some Tasks</h1>\r\n                        : this.state.list.length > 0 ? <h1>You have {this.state.list.length} tasks to do</h1> : <h1>Add Some Tasks to do</h1>\r\n\r\n\r\n                }\r\n                <div className=\"ToDoList\">\r\n                    {\r\n                        this.displayList()\r\n                    }\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Todo;\r\n","export default __webpack_public_path__ + \"static/media/task.1f5e3e8d.png\";","import Todo from \"./Todo\";\r\nimport './Styles.css'\r\nimport task from '../task.png'\r\nimport './App.css'\r\nfunction App(props) {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"App-header\">\r\n                <img src={task} alt={task} height=\"100px\" className=\"App-logo\" />\r\n                <h3 style={{ color: \"white\" }}>Your Favourite To_Do App </h3>\r\n            </div>\r\n\r\n            <h1>Your ToDo's Here</h1>\r\n            <Todo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Todo/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}