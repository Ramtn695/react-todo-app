{"version":3,"sources":["Todo/Todo.js","Todo/App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","task","list","handleChange","bind","handleSubmit","handleRemove","filterItem","event","this","setState","target","value","preventDefault","tasks","id","Date","now","completed","push","console","log","el","findTask","find","e","updateTask","map","filter","updateTasks","className","onSubmit","htmlFor","type","name","placeholder","onChange","required","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3322c2b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: '',\r\n            list: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.filterItem = this.filterItem.bind(this);\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            task: event.target.value\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        // * To Display Task As List *\r\n        const list = [...this.state.list];\r\n        const tasks = {\r\n            id: Date.now(),\r\n            task: this.state.task,\r\n            completed: false\r\n        }\r\n        list.push(tasks);\r\n        this.setState({\r\n            list,\r\n            task: ''\r\n        })\r\n        console.log(tasks);\r\n    }\r\n    handleRemove(el) {\r\n        const task = [...this.state.list];\r\n        let findTask = task.find(e => e.id === el.id);\r\n        let updateTask = task.map(e => e.id === el.id ? { ...findTask, completed: true } : e);\r\n        updateTask = task.filter(e => e.id !== el.id);\r\n        this.setState({\r\n            list: updateTask\r\n        })\r\n        console.log(updateTask);\r\n    }\r\n    filterItem(value) {\r\n        console.log(value);\r\n        switch (value) {\r\n            case \"true\":\r\n                let taskEnd = true;\r\n                const task = [...this.state.list];\r\n                let updateTask = task.filter(e => e.completed === taskEnd);\r\n                this.setState({\r\n                    task: updateTask\r\n                })\r\n                break;\r\n            case \"false\":\r\n                let taskStatus = false;\r\n                let updateTasks = task.filter(e => e.completed === taskStatus);\r\n                this.setState({\r\n                    task: updateTasks\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    render(props) {\r\n        return (\r\n            <div>\r\n                <div className=\"ToDoForm\">\r\n                    {/* To Get User Input  */}\r\n                    <form onSubmit={e => this.handleSubmit(e)}>\r\n                        <label htmlFor=\"task\"> Task : </label>\r\n                        <input type=\"text\" value={this.state.task} name=\"task\" placeholder=\"Enter a Task to Do\" onChange={e => this.handleChange(e)} required />\r\n                        <button value=\"submit\" className=\"Submit\"> Submit </button>\r\n                    </form>\r\n                    {\r\n                        this.state.list.map((el) => (\r\n                            <div className=\"TaskList\" key={el.id}>\r\n                                {el.task}\r\n                                <button className=\"Clear\" onClick={() => this.handleRemove(el)}> X </button>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                    {/* Switch Over Various Actions Input */}\r\n                    <div>\r\n\r\n                        <input type=\"checkbox\" value=\"all\" name=\"task\" className=\"Checkbox\" onChange={(event) => this.filterItem(event.target.value)} />\r\n                        <label htmlFor=\"All Tasks \" >All Tasks</label>\r\n\r\n                        <input type=\"checkbox\" value=\"true\" name=\"task\" className=\"Checkbox\" onChange={(event) => this.filterItem(event.target.value)} />\r\n                        <label htmlFor=\"Completed \" >Completed</label>\r\n\r\n                        <input type=\"checkbox\" value=\"false\" name=\"task\" className=\"Checkbox\" onChange={(event) => this.filterItem(event.target.value)} />\r\n                        <label htmlFor=\"Running Task \" >Running Task</label>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Todo;\r\n","import Todo from \"./Todo\";\r\nimport './Styles.css'\r\n\r\nfunction App(props) {\r\n    return (\r\n        <div className=\"App\">\r\n            <h1>Your Favourite To_Do App </h1>\r\n            <h1>Your ToDo's Here</h1>\r\n            <Todo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Todo/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}